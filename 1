local e=[[]] local k='5418814524' local d={} local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' for i=1,#e,4 do local c1,c2,c3,c4=string.byte(e,i,i+3) c1=b:find(string.char(c1))-1 c2=b:find(string.char(c2))-1 c3=b:find(string.char(c3))-1 c4=b:find(string.char(c4))-1 local n=bit32.lshift(c1,18)+bit32.lshift(c2,12)+bit32.lshift(c3,6)+c4 table.insert(d,string.char(bit32.rshift(bit32.band(n,0xFF0000),16))) if c3~=64 then table.insert(d,string.char(bit32.rshift(bit32.band(n,0xFF00),8))) end if c4~=64 then table.insert(d,string.char(bit32.band(n,0xFF))) end end d=table.concat(d) local r={} for i=1,#d do r[i]=string.char(string.byte(d,i)^string.byte(k,((i-1)%#k)+1)) end local f=loadstring(table.concat(r)) if f then return f() else error("解密失败") end
